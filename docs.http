@url = http://localhost:3000/api
@cookie = fa36461f853cea294c57376d34ee7ae1408ca72a666804f4c9b39090cdb7393c%7Cd2fe282e05342c8c9aff90c7a07d8623d864997eda45a94775e26811abcbcaa1; authjs.callback-url=http%3A%2F%2Flocalhost%3A3000; authjs.session-token=eyJhbGciOiJkaXIiLCJlbmMiOiJBMjU2Q0JDLUhTNTEyIiwia2lkIjoiUzVhOHQ1TmxDbU9yMjZoTVJHdGR4M042RmRCY2JJQ1ZMY1Y2MWRfSmk0UTlHN01CbDNMQzlNSVp1UTlQb3o1UjlvaUhzS2dzcThHRWlvb05tMTU1SFEifQ..yUVtlZVb_IoHKt3JZuJPlA.sygHYchjXC35-Xy3kv1xPNl7Y2Nso3RRNx3sV-e-vlRvWct47bXuPR1OUYgUdtDwBq3886O3nMg2nAvZU91NuElj5rQJ2sqlBYCcGcyX9AANPjBhTPGHhPY6-enhDxc3W7hTxvx_NWjVrMWG8_ycAL5T6Z-ZP14d4rjrdH-tPYONUFpJoprFpu879APpDPsoi9k4mSWfnAMM0u3W9PzHAplbHKWs_HnJNNHa7pSKvTwGrOBPO6WEkza6zSnF9klmxjo0wTVXUaebMqqGCtgVKdwQOvw6xjt6ZohHHDqnync.22gZs2cWu6h5TBZdiGAR2mSsV8tFvxmOUr_Gy40MwGk

#########
# BOOTH #
#########

### Get all booths (basic - descending order by name)
GET {{url}}/booth
Content-Type: application/json
Cookie: {{cookie}}

### Get booths with pagination
GET {{url}}/booth?page=1&limit=10
Content-Type: application/json
Cookie: {{cookie}}

### Get booths with filtering by name (case-insensitive)
GET {{url}}/booth?name=New
Content-Type: application/json
Cookie: {{cookie}}

### Get booths with filtering by status
GET {{url}}/booth?status=true
Content-Type: application/json
Cookie: {{cookie}}

### Get booths with sorting
GET {{url}}/booth?sort=createdAt&order=desc
Content-Type: application/json
Cookie: {{cookie}}

### Get booths with multiple filters and pagination
GET {{url}}/booth?name=new&status=true&page=1&limit=5&sort=name&order=asc
Content-Type: application/json
Cookie: {{cookie}}

### Get a single booth by ID
# Replace BOOTH_ID with an actual ID from your database
GET {{url}}/booth/cma1dzjg60003106qp9p1get7
Content-Type: application/json
Cookie: {{cookie}}

### Create a new booth
POST {{url}}/booth
Content-Type: application/json
Cookie: {{cookie}}

{
  "name": "New Study Room",
  "status": true,
  "notes": "Quiet study space for individual sessions"
}

### Update an existing booth
# Replace BOOTH_ID with an actual ID from your database
PUT {{url}}/booth
Content-Type: application/json
Cookie: {{cookie}}

{
  "boothId": "BOOTH_ID",
  "name": "Updated Study Room",
  "status": false,
  "notes": "Under maintenance"
}

### Delete a booth (using query parameter)
# Replace BOOTH_ID with an actual ID from your database
DELETE {{url}}/booth?boothId=BOOTH_ID
Content-Type: application/json
Cookie: {{cookie}}

##############
# CLASS TYPE #
##############

### Get all class types (basic - descending order by name)
GET {{url}}/class-type
Content-Type: application/json
Cookie: {{cookie}}

### Get class types with pagination
GET {{url}}/class-type?page=1&limit=10
Content-Type: application/json
Cookie: {{cookie}}

### Get class types with filtering by name (case-insensitive)
GET {{url}}/class-type?name=Regular
Content-Type: application/json
Cookie: {{cookie}}

### Get class types with sorting
GET {{url}}/class-type?sort=createdAt&order=desc
Content-Type: application/json
Cookie: {{cookie}}

### Get class types with multiple filters and pagination
GET {{url}}/class-type?name=通常&page=1&limit=5&sort=name&order=asc
Content-Type: application/json
Cookie: {{cookie}}

### Get a single class type by ID
# Replace CLASS_TYPE_ID with an actual ID from your database
GET {{url}}/class-type/cma144m5k000l104qnb9sfcq5
Content-Type: application/json
Cookie: {{cookie}}]

### Create a new class type
POST {{url}}/class-type
Content-Type: application/json
Cookie: {{cookie}}

{
  "name": "Special Tutorial",
  "notes": "One-on-one intensive tutorial sessions"
}

### Update an existing class type
# Replace CLASS_TYPE_ID with an actual ID from your database
PUT {{url}}/class-type
Content-Type: application/json
Cookie: {{cookie}}

{
  "classTypeId": "CLASS_TYPE_ID",
  "name": "Updated Tutorial Session",
  "notes": "Modified tutorial format"
}

### Delete a class type (using query parameter)
# Replace CLASS_TYPE_ID with an actual ID from your database
DELETE {{url}}/class-type?classTypeId=CLASS_TYPE_ID
Content-Type: application/json
Cookie: {{cookie}}

###########
# STUDENT #
###########

### Get all students (basic - descending order by name)
GET {{url}}/student
Content-Type: application/json
Cookie: {{cookie}}

### Get students with pagination
GET {{url}}/student?page=1&limit=10
Content-Type: application/json
Cookie: {{cookie}}

### Get students with filtering by name (case-insensitive)
GET {{url}}/student?name=高橋
Content-Type: application/json
Cookie: {{cookie}}

### Get students with filtering by school name (case-insensitive)
GET {{url}}/student?schoolName=公
Content-Type: application/json
Cookie: {{cookie}}

### Get students with filtering by grade name (case-insensitive)
GET {{url}}/student?gradeName=小学
Content-Type: application/json
Cookie: {{cookie}}

### Get students with filtering by school type
GET {{url}}/student?schoolType=立
Content-Type: application/json
Cookie: {{cookie}}

### Get students with filtering by exam school type
GET {{url}}/student?examSchoolType=HIGH
Content-Type: application/json
Cookie: {{cookie}}

### Get students with sorting
GET {{url}}/student?sort=createdAt&order=desc
Content-Type: application/json
Cookie: {{cookie}}

### Get students with multiple filters and pagination
GET {{url}}/student?name=Sato&schoolType=PRIVATE&gradeName=Middle&page=1&limit=5&sort=name&order=asc
Content-Type: application/json
Cookie: {{cookie}}

### Get a single student by ID (now publicly accessible without authentication)
# This endpoint now works without any Zod validation issues
GET {{url}}/student/cma144m620012104qmvpu55ar
Content-Type: application/json
Cookie: {{cookie}}

### Create a new student
# Make sure to use a real user ID from your database
POST {{url}}/student
Content-Type: application/json
Cookie: {{cookie}}

{
  "username": "takahashi_yuki",
  "password": "securepassword123",
  "name": "Takahashi Yuki",
  "kanaName": "タカハシ ユキ",
  "gradeId": "cma144m54000a104qkhcfnvzl",
  "schoolName": "Tokyo Metropolitan High School",
  "schoolType": "PUBLIC",
  "examSchoolType": "HIGH",
  "birthDate": "2005-06-15",
  "parentEmail": "parent@example.com",
  "preferences": {
    "subjects": [
      "cma144m5g000g104qhle1xh2y",
      "cma144m5g000h104q011r76l4"
      ],
    "teachers": [
      "cma144m5w000w104q8cncwj26",
       "cma144m5u000u104qsqx0wjex"
       ],
    "timeSlots": [
      {
        "dayOfWeek": "MONDAY",
        "startTime": "14:00:00",
        "endTime": "16:00:00"
      }
    ]
  }
}

### Update an existing student
# Now works with partial updates (birthDate is optional)
PUT {{url}}/student
Content-Type: application/json
Cookie: {{cookie}}

{
  "studentId": "cma144m620012104qmvpu55ar",
  "password": "newSecurePassword456",
  "name": "Takahashi Yuki",
  "parentEmail": "new_parent@example.com",
  "kanaName": "タカハシ ユキ",
  "schoolName": "Tokyo Metropolitan Advanced High School",
    "preferences": {
    "subjects": [
      "cma144m5g000g104qhle1xh2y",
      "cma144m5g000h104q011r76l4"
      ],
    "teachers": [
      "cma144m5w000w104q8cncwj26",
      "cma144m5u000u104qsqx0wjex"
      ]
  },
  "notes": "Interested in computer science and mathematics"
}

### Delete a student (using query parameter)
# Replace STUDENT_ID with an actual ID from your database
DELETE {{url}}/student?studentId=cma144m640014104q3x1v0vcp
Content-Type: application/json
Cookie: {{cookie}}

################
# STUDENT TYPE #
################

### Get all student types
GET {{url}}/student-type
Content-Type: application/json
Cookie: {{cookie}}

### Get all student types with pagination and filtering
GET {{url}}/student-type?page=1&limit=10&name=Elementary&sort=name&order=asc
Content-Type: application/json
Cookie: {{cookie}}

### Get a single student type by ID
# Replace STUDENT_TYPE_ID with an actual ID from your database
GET {{url}}/student-type/STUDENT_TYPE_ID
Content-Type: application/json
Cookie: {{cookie}}

### Create a new student type
POST {{url}}/student-type
Content-Type: application/json
Cookie: {{cookie}}

{
  "name": "High School",
  "description": "Students in grades 10-12"
}

### Update an existing student type
PUT {{url}}/student-type
Content-Type: application/json
Cookie: {{cookie}}

{
  "studentTypeId": "cma1tmebc00171036sj95amta",
  "name": "Updated High School",
  "description": "Students in grades 9-12"
}

### Delete a student type
DELETE {{url}}/student-type?studentTypeId=cma1tmebc00171036sj95amta
Content-Type: application/json
Cookie: {{cookie}}

###################
# TEACHER SUBJECT #
###################

### Get all teacher subjects (basic)
GET {{url}}/teacher-subjects
Content-Type: application/json
Cookie: {{cookie}}

### Get a single teacher-subject relationship by composite ID
# Replace TEACHER_ID and SUBJECT_ID with actual IDs from your database
GET {{url}}/teacher-subjects/cma144m5w000w104q8cncwj26/cma144m5g000i104q6edj7rri
Content-Type: application/json
Cookie: {{cookie}}

### Get teacher subjects with pagination
GET {{url}}/teacher-subjects?page=1&limit=10
Content-Type: application/json
Cookie: {{cookie}}

### Get teacher subjects with filtering by teacherId
# Replace TEACHER_ID with an actual ID from your database
GET {{url}}/teacher-subjects?teacherId=cma144m5u000u104qsqx0wjex
Content-Type: application/json
Cookie: {{cookie}}

### Get teacher subjects with filtering by subjectId
# Replace SUBJECT_ID with an actual ID from your database
GET {{url}}/teacher-subjects?subjectId=cma144m5g000g104qhle1xh2y
Content-Type: application/json
Cookie: {{cookie}}

### Get teacher subjects with sorting
GET {{url}}/teacher-subjects?sort=createdAt&order=desc
Content-Type: application/json
Cookie: {{cookie}}

### Get teacher subjects with multiple filters and pagination
# Replace IDs with actual IDs from your database
GET {{url}}/teacher-subjects?teacherId=TEACHER_ID&subjectId=SUBJECT_ID&page=1&limit=5&sort=createdAt&order=asc
Content-Type: application/json
Cookie: {{cookie}}

### Create a new teacher subject relationship
# Replace IDs with actual IDs from your database
POST {{url}}/teacher-subjects
Content-Type: application/json
Cookie: {{cookie}}

{
  "teacherId": "TEACHER_ID",
  "subjectId": "SUBJECT_ID",
  "notes": "Teacher is highly qualified in this subject"
}

### Update an existing teacher subject relationship
# Replace IDs with actual IDs from your database
PUT {{url}}/teacher-subjects
Content-Type: application/json
Cookie: {{cookie}}

{
  "teacherId": "TEACHER_ID",
  "subjectId": "SUBJECT_ID",
  "notes": "Updated qualification notes for this subject"
}

### Delete a teacher subject relationship (using query parameters)
# Replace IDs with actual IDs from your database
DELETE {{url}}/teacher-subjects?teacherId=TEACHER_ID&subjectId=SUBJECT_ID
Content-Type: application/json
Cookie: {{cookie}}

##############
# EVALUATION #
##############

### Get all evaluations (basic - descending order by name)
GET {{url}}/evaluation
Content-Type: application/json
Cookie: {{cookie}}

### Get a single evaluation by ID
# Replace EVALUATION_ID with an actual ID from your database
GET {{url}}/evaluation/cma144m5n000n104qdxmlxrdu
Content-Type: application/json
Cookie: {{cookie}}

### Get evaluations with pagination
GET {{url}}/evaluation?page=1&limit=10
Content-Type: application/json
Cookie: {{cookie}}

### Get evaluations with filtering by name (case-insensitive)
GET {{url}}/evaluation?name=B
Content-Type: application/json
Cookie: {{cookie}}

### Get evaluations with filtering by score
GET {{url}}/evaluation?score=90
Content-Type: application/json
Cookie: {{cookie}}

### Get evaluations with sorting
GET {{url}}/evaluation?sort=score&order=desc
Content-Type: application/json
Cookie: {{cookie}}

### Get evaluations with multiple filters and pagination
GET {{url}}/evaluation?name=Basic&score=3&page=1&limit=5&sort=name&order=asc
Content-Type: application/json
Cookie: {{cookie}}

### Create a new evaluation
POST {{url}}/evaluation
Content-Type: application/json
Cookie: {{cookie}}

{
  "name": "Exceptional Teaching",
  "score": 5,
  "notes": "Outstanding knowledge and teaching skills"
}

### Update an existing evaluation
# Replace EVALUATION_ID with an actual ID from your database
PUT {{url}}/evaluation
Content-Type: application/json
Cookie: {{cookie}}

{
  "evaluationId": "cma144m5n000n104qdxmlxrdu",
  "name": "Updated Exceptional Teaching",
  "score": 4,
  "notes": "Very good knowledge and teaching skills"
}

### Delete an evaluation (using query parameter)
# Replace EVALUATION_ID with an actual ID from your database
DELETE {{url}}/evaluation?evaluationId=cma144m5n000n104qdxmlxrdu
Content-Type: application/json
Cookie: {{cookie}}

################
# SUBJECT TYPE #
################

### Get all subject types (basic - descending order by name)
GET {{url}}/subject-type
Content-Type: application/json
Cookie: {{cookie}}

### Get a single subject type by ID
# Replace SUBJECT_TYPE_ID with an actual ID from your database
GET {{url}}/subject-type/cma144m5d000e104q1leaiz1u
Content-Type: application/json
Cookie: {{cookie}}

### Get subject types with pagination
GET {{url}}/subject-type?page=1&limit=10
Content-Type: application/json
Cookie: {{cookie}}

### Get subject types with filtering by name (case-insensitive)
GET {{url}}/subject-type?name=数学
Content-Type: application/json
Cookie: {{cookie}}

### Get subject types with sorting
GET {{url}}/subject-type?sort=createdAt&order=desc
Content-Type: application/json
Cookie: {{cookie}}

### Get subject types with multiple filters and pagination
GET {{url}}/subject-type?name=数学&page=1&limit=5&sort=name&order=asc
Content-Type: application/json
Cookie: {{cookie}}

### Create a new subject type
POST {{url}}/subject-type
Content-Type: application/json
Cookie: {{cookie}}

{
  "name": "Science",
  "notes": "Includes physics, chemistry, and biology subjects"
}

### Update an existing subject type
# Replace SUBJECT_TYPE_ID with an actual ID from your database
PUT {{url}}/subject-type
Content-Type: application/json
Cookie: {{cookie}}

{
  "subjectTypeId": "cma1vj74k00181036ardrfevg",
  "name": "Natural Sciences",
  "notes": "Physics, chemistry, biology, and earth sciences"
}

### Delete a subject type (using query parameter)
# Replace SUBJECT_TYPE_ID with an actual ID from your database
DELETE {{url}}/subject-type?subjectTypeId=cma1vj74k00181036ardrfevg
Content-Type: application/json
Cookie: {{cookie}}

###########
# SUBJECT #
###########

### Get all subjects (basic - descending order by name)
GET {{url}}/subjects
Content-Type: application/json
Cookie: {{cookie}}

### Get a single subject by ID
# Replace SUBJECT_ID with an actual ID from your database
GET {{url}}/subjects/cma144m5g000i104q6edj7rri
Content-Type: application/json
Cookie: {{cookie}}

### Get subjects with pagination
GET {{url}}/subjects?page=1&limit=10
Content-Type: application/json
Cookie: {{cookie}}

### Get subjects with filtering by name (case-insensitive)
GET {{url}}/subjects?name=英語
Content-Type: application/json
Cookie: {{cookie}}

### Get subjects with filtering by subject type ID
GET {{url}}/subjects?subjectTypeId=cma144m5d000e104q1leaiz1u
Content-Type: application/json
Cookie: {{cookie}}

### Get subjects with sorting
GET {{url}}/subjects?sort=createdAt&order=desc
Content-Type: application/json
Cookie: {{cookie}}

### Get subjects with multiple filters and pagination
GET {{url}}/subjects?name=数学&subjectTypeId=cma144m5d000e104q1leaiz1u&page=1&limit=5&sort=name&order=asc
Content-Type: application/json
Cookie: {{cookie}}

### Create a new subject
POST {{url}}/subjects
Content-Type: application/json
Cookie: {{cookie}}

{
  "name": "Advanced Physics",
  "subjectTypeId": "cma144m5d000f104qxtggm46e",
  "notes": "University preparation course for physics"
}

### Update an existing subject
PUT {{url}}/subjects
Content-Type: application/json
Cookie: {{cookie}}

{
  "subjectId": "cma144m5g000j104q9todc1hr",
  "name": "Advanced Physics",
  "subjectTypeId": "cma144m5d000f104qxtggm46e",
  "notes": "Updated university preparation course"
}

### Delete a subject (using query parameter)
DELETE {{url}}/subjects?subjectId=cma144m5g000j104q9todc1hr
Content-Type: application/json
Cookie: {{cookie}}

###########
# GRADE   #
###########

### Get all grades (basic - descending order by name)
GET {{url}}/grades
Content-Type: application/json
Cookie: {{cookie}}

### Get grades with pagination
GET {{url}}/grades?page=1&limit=10
Content-Type: application/json
Cookie: {{cookie}}

### Get grades with filtering by name (case-insensitive)
GET {{url}}/grades?name=Elementary
Content-Type: application/json
Cookie: {{cookie}}

### Get grades with filtering by studentTypeId
# Replace STUDENT_TYPE_ID with an actual student type ID from your database
GET {{url}}/grades?studentTypeId=cma144m52000910xx3x9r8h9k
Content-Type: application/json
Cookie: {{cookie}}

### Get grades with filtering by gradeYear
GET {{url}}/grades?gradeYear=3
Content-Type: application/json
Cookie: {{cookie}}

### Get grades with sorting
GET {{url}}/grades?sort=gradeYear&order=asc
Content-Type: application/json
Cookie: {{cookie}}

### Get grades with multiple filters and pagination
# Replace STUDENT_TYPE_ID with an actual student type ID from your database
GET {{url}}/grades?name=Elementary&studentTypeId=cma144m52000910xx3x9r8h9k&gradeYear=2&page=1&limit=5&sort=name&order=asc
Content-Type: application/json
Cookie: {{cookie}}

### Get a single grade by ID
# Replace GRADE_ID with an actual ID from your database
GET {{url}}/grades/GRADE_ID
Content-Type: application/json
Cookie: {{cookie}}

### Create a new grades
# Replace STUDENT_TYPE_ID with an actual student type ID from your database
POST {{url}}/grades
Content-Type: application/json
Cookie: {{cookie}}

{
  "name": "Second Year Junior High",
  "studentTypeId": "cma144m500008104qarmazu88",
  "gradeYear": 8,
  "notes": "Second year of junior high school (8th grades)"
}

### Update an existing grades
# Replace GRADE_ID and STUDENT_TYPE_ID with actual IDs from your database
PUT {{url}}/grades
Content-Type: application/json
Cookie: {{cookie}}

{
  "gradeId": "cma1x3s6o001c103697jyilas",
  "name": "Updated Second Year Junior High",
  "studentTypeId": "cma144m500008104qarmazu88",
  "gradeYear": 8,
  "notes": "Updated notes for second year junior high school"
}

### Delete a grades (using query parameter)
# Replace GRADE_ID with an actual ID from your database
DELETE {{url}}/grades?gradeId=cma1x3s6o001c103697jyilas
Content-Type: application/json
Cookie: {{cookie}}

###########
# TEACHER #
###########

### Get all teachers (basic - descending order by name)
GET {{url}}/teacher
Content-Type: application/json
Cookie: {{cookie}}

### Get teachers with pagination
GET {{url}}/teacher?page=1&limit=10
Content-Type: application/json
Cookie: {{cookie}}

### Get teachers with filtering by name (case-insensitive)
GET {{url}}/teacher?name=鈴木
Content-Type: application/json
Cookie: {{cookie}}

### Get teachers with filtering by email (case-insensitive)
GET {{url}}/teacher?email=teacher
Content-Type: application/json
Cookie: {{cookie}}

### Get teachers with filtering by university (case-insensitive)
GET {{url}}/teacher?university=京都
Content-Type: application/json
Cookie: {{cookie}}

### Get teachers with filtering by enrollment status
GET {{url}}/teacher?enrollmentStatus=在籍
Content-Type: application/json
Cookie: {{cookie}}

### Get teachers with sorting
GET {{url}}/teacher?sort=createdAt&order=desc
Content-Type: application/json
Cookie: {{cookie}}

### Get teachers with multiple filters and pagination
GET {{url}}/teacher?name=Tanaka&university=Tokyo&page=1&limit=5&sort=name&order=asc
Content-Type: application/json
Cookie: {{cookie}}

### Get a single teacher by ID (make sure to replace with a real ID)
GET {{url}}/teacher/cma144m5u000u104qsqx0wjex
Content-Type: application/json
Cookie: {{cookie}}

### Create a new teacher
POST {{url}}/teacher
Content-Type: application/json
Cookie: {{cookie}}

{
  "username": "tanaka_kenji",
  "password": "securepassword123",
  "name": "Tanaka Kenji",
  "evaluationId": "cma6sgl380001vzo0f8oaxyds",
  "birthDate": "1990-05-10",
  "mobileNumber": "090-1234-5678",
  "email": "tanaka.kenji@example.com",
  "highSchool": "Tokyo High School",
  "university": "Tokyo University",
  "faculty": "Science",
  "department": "Physics",
  "enrollmentStatus": "ACTIVE",
  "subjects": [
    "cma144m5g000g104qhle1xh2y",
    "cma144m5g000h104q011r76l4"
  ]
}

### Update an existing teacher (make sure to replace with a real ID)
PUT {{url}}/teacher
Content-Type: application/json
Cookie: {{cookie}}

{
  "teacherId": "cma144m5u000u104qsqx0wjex",
  "password": "newSecurePassword456",
  "name": "Tanaka Kenji",
  "email": "kenji.tanaka@example.com",
  "mobileNumber": "090-8765-4321",
  "subjects": [
    "cma144m5g000g104qhle1xh2y",
    "cma144m5g000h104q011r76l4"
  ],
  "notes": "Expert in advanced mathematics and physics"
}

### Delete a teacher (using query parameter)
DELETE {{url}}/teacher?teacherId=cma144m5u000u104qsqx0wjex
Content-Type: application/json
Cookie: {{cookie}}
