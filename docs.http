@url = http://localhost:3000/api
@cookie = sb-vyauzmxjjpbzichdnqnp-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxVdmR6QktXRlIwWTNkYU55OHZkV2NpTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDNaNVlYVjZiWGhxYW5CaWVtbGphR1J1Y1c1d0xuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSXpNVE0zTVRVME9DMDBPRFF4TFRRNU9Ea3RZVFUxWkMwNU1UUmlZelppTVRJeVpUWWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRME9EZ3dPRGs0TENKcFlYUWlPakUzTkRRNE56Y3lPVGdzSW1WdFlXbHNJam9pYVhOc2IyMUFaMjFoYVd3dVkyOXRJaXdpY0dodmJtVWlPaUlpTENKaGNIQmZiV1YwWVdSaGRHRWlPbnNpY0hKdmRtbGtaWElpT2lKbGJXRnBiQ0lzSW5CeWIzWnBaR1Z5Y3lJNld5SmxiV0ZwYkNKZGZTd2lkWE5sY2w5dFpYUmhaR0YwWVNJNmV5SmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaWDBzSW5KdmJHVWlPaUpoZFhSb1pXNTBhV05oZEdWa0lpd2lZV0ZzSWpvaVlXR

#########
# BOOTH #
#########

### Get all booths (basic - descending order by name)
GET {{url}}/booth
Content-Type: application/json
Cookie: {{cookie}}

### Get booths with pagination
GET {{url}}/booth?page=1&limit=10
Content-Type: application/json
Cookie: {{cookie}}

### Get booths with filtering by name (case-insensitive)
GET {{url}}/booth?name=New
Content-Type: application/json
Cookie: {{cookie}}

### Get booths with filtering by status
GET {{url}}/booth?status=true
Content-Type: application/json
Cookie: {{cookie}}

### Get booths with sorting
GET {{url}}/booth?sort=createdAt&order=desc
Content-Type: application/json
Cookie: {{cookie}}

### Get booths with multiple filters and pagination
GET {{url}}/booth?name=new&status=true&page=1&limit=5&sort=name&order=asc
Content-Type: application/json
Cookie: {{cookie}}

### Create a new booth
POST {{url}}/booth
Content-Type: application/json
Cookie: {{cookie}}

{
  "name": "New Study Room",
  "status": true,
  "notes": "Quiet study space for individual sessions"
}

### Update an existing booth
# Replace BOOTH_ID with an actual ID from your database
PUT {{url}}/booth
Content-Type: application/json
Cookie: {{cookie}}

{
  "boothId": "BOOTH_ID",
  "name": "Updated Study Room",
  "status": false,
  "notes": "Under maintenance"
}

### Delete a booth (using query parameter)
# Replace BOOTH_ID with an actual ID from your database
DELETE {{url}}/booth?boothId=BOOTH_ID
Content-Type: application/json
Cookie: {{cookie}}

##############
# CLASS TYPE #
##############

### Get all class types (basic - descending order by name)
GET {{url}}/class-type
Content-Type: application/json
Cookie: {{cookie}}

### Get class types with pagination
GET {{url}}/class-type?page=1&limit=10
Content-Type: application/json
Cookie: {{cookie}}

### Get class types with filtering by name (case-insensitive)
GET {{url}}/class-type?name=Regular
Content-Type: application/json
Cookie: {{cookie}}

### Get class types with sorting
GET {{url}}/class-type?sort=createdAt&order=desc
Content-Type: application/json
Cookie: {{cookie}}

### Get class types with multiple filters and pagination
GET {{url}}/class-type?name=通常&page=1&limit=5&sort=name&order=asc
Content-Type: application/json
Cookie: {{cookie}}

### Create a new class type
POST {{url}}/class-type
Content-Type: application/json
Cookie: {{cookie}}

{
  "name": "Special Tutorial",
  "notes": "One-on-one intensive tutorial sessions"
}

### Update an existing class type
# Replace CLASS_TYPE_ID with an actual ID from your database
PUT {{url}}/class-type
Content-Type: application/json
Cookie: {{cookie}}

{
  "classTypeId": "CLASS_TYPE_ID",
  "name": "Updated Tutorial Session",
  "notes": "Modified tutorial format"
}

### Delete a class type (using query parameter)
# Replace CLASS_TYPE_ID with an actual ID from your database
DELETE {{url}}/class-type?classTypeId=CLASS_TYPE_ID
Content-Type: application/json
Cookie: {{cookie}}
